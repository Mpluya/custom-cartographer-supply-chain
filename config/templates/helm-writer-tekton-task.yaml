#@ load("@ytt:data", "data")

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: helm-writer
  namespace: tap-tasks
spec:
  description: |-
    A task that packages and publishes a helm chart.
  params:
    - name: source-url
      type: string
      description: 
    - name: image
      description: 
      type: string
  steps:
    - name: pull-source-code
      image: cxscssa.azurecr.io/tap-1-7-0/tap-packages@sha256:b31bb7c399a5bddd802f20891d4e2f493bb7183286cfb13feba8b5aaea33a3bd
      script: |
        #!/usr/bin/env bash

        set -o errexit
        set -o xtrace

        source="$(params.source-url)"

        cd `mktemp -d`
        curl -sL -o source.tar.gz "${source}"
        tar --touch --no-overwrite-dir -xzf source.tar.gz -C /source
      securityContext:
        runAsUser: 0
      volumeMounts:
        - name: source-dir
          mountPath: /source
    - name: helm-package
      image: cxscssa.azurecr.io/tap-1-7-0/tap-packages@sha256:b31bb7c399a5bddd802f20891d4e2f493bb7183286cfb13feba8b5aaea33a3bd
      script: |-
        #!/usr/bin/env bash
        set -o errexit
        set -o xtrace

        export HELM_INSTALL_DIR="/tools"
        mkdir -p tools
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh || true
        /tools/helm version
        /tools/helm package /source/helm
      securityContext:
        runAsUser: 0
      volumeMounts:
        - name: source-dir
          mountPath: /source
        - name: tools
          mountPath: /tools
    - name: helm-publish
      env:
      - name: "REGISTRY"
        value: "cxscssa.azurecr.io"
      image: cxscssa.azurecr.io/tap-1-7-0/tap-packages@sha256:b31bb7c399a5bddd802f20891d4e2f493bb7183286cfb13feba8b5aaea33a3bd
      script: |-
        #!/usr/bin/env bash
        
        set -o xtrace
        echo $(params.image)
        
        cd /source

        for chart in $(find ./helm -name 'Chart.yaml'); do
          chart_dir=$(dirname "$chart")
          chart_name=$(yq eval '.name' "$chart")
          chart_version=$(yq eval '.version' "$chart")

          /tools/helm push "$chart_dir" "$chart_name" --version "$chart_version" oci://$REGISTRY/helm
        done
      volumeMounts:
        - name: source-dir
          mountPath: /source
        - name: tools
          mountPath: /tools
  volumes:
    - name: source-dir
      emptyDir: {}
    - name: tools
      emptyDir: {}