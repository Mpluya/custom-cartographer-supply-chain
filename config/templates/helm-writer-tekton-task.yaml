#@ load("@ytt:data", "data")

---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: helm-writer
  namespace: tap-tasks
spec:
  description: |-
    A task that packages and publishes a helm chart.
  params:
    - name: source-url
      type: string
      description: 
    # - name: image
    #   description: 
    #   type: string
  steps:
    - name: tools
      env:      
      - name: "YQ_VERSION"
        value: "v4.40.5"
      image: cxscssa.azurecr.io/tap-1-7-0/tap-packages@sha256:b31bb7c399a5bddd802f20891d4e2f493bb7183286cfb13feba8b5aaea33a3bd
      script: |-
        #!/usr/bin/env bash
        set -o errexit
        set -o xtrace

        export HELM_INSTALL_DIR="/tools"
        mkdir -p tools
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh || true
        /tools/helm version

        curl -sL -o yq.tar.gz https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64.tar.gz
        tar --touch --no-overwrite-dir -xzf yq.tar.gz -C /tools
      securityContext:
        runAsUser: 0
      volumeMounts:
        - name: tools
          mountPath: /tools
    - name: pull-source-code
      image: cxscssa.azurecr.io/tap-1-7-0/tap-packages@sha256:b31bb7c399a5bddd802f20891d4e2f493bb7183286cfb13feba8b5aaea33a3bd
      script: |
        #!/usr/bin/env bash

        set -o errexit
        set -o xtrace

        #!source="$(params.source-url)"

        cd `mktemp -d`
        #!curl -sL -o source.tar.gz "${source}"
        #!tar --touch --no-overwrite-dir -xzf source.tar.gz -C /source
      securityContext:
        runAsUser: 0
      volumeMounts:
        - name: source-dir
          mountPath: /source
    - name: helm-package
      env:
      - name: "NEW_IMAGE_TAG"
        value: "0.0.0"
      image: cxscssa.azurecr.io/tap-1-7-0/tap-packages@sha256:b31bb7c399a5bddd802f20891d4e2f493bb7183286cfb13feba8b5aaea33a3bd
      script: |-
        #!/usr/bin/env bash
        set -o xtrace

        full_image="$(params.image)"
        image_digest="${full_image#*@}"
 
        /tools/yq_linux_amd64 eval ".image.tag = \"$image_digest\"" -i /source/helm/values.yaml

        /tools/helm package /source/helm --destination /source/helm
      securityContext:
        runAsUser: 0
      volumeMounts:
        - name: source-dir
          mountPath: /source
        - name: tools
          mountPath: /tools
    - name: helm-publish
      env:
      - name: "REGISTRY"
        value: "cxscssa.azurecr.io"
      image: cxscssa.azurecr.io/tap-1-7-0/tap-packages@sha256:b31bb7c399a5bddd802f20891d4e2f493bb7183286cfb13feba8b5aaea33a3bd
      script: |-
        #!/usr/bin/env bash
        
        set -o xtrace
        cd /source/helm

        for chart in $(find . -name 'Chart.yaml'); do
          chart_dir=$(dirname "$chart")
          chart_name=$(/tools/yq_linux_amd64 eval '.name' "$chart")
          chart_version=$(/tools/yq_linux_amd64 eval '.version' "$chart")

          chart_tgz=$chart_name-$chart_version.tgz
          /tools/helm push /source/helm/$chart_tgz oci://$REGISTRY/helm
        done
      volumeMounts:
        - name: source-dir
          mountPath: /source
        - name: tools
          mountPath: /tools
  volumes:
    - name: source-dir
      emptyDir: {}
    - name: tools
      emptyDir: {}